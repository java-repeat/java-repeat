# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: ${{ matrix.language }}

      - name: Install gpg secret key
        run: |
          cat <(echo -e "${{ secrets.OSSRH_GPG_SECRET_KEY }}") | gpg --batch --import
          gpg --list-secret-keys --keyid-format LONG

      - name: Build with Maven
        run: ./mvnw clean verify

      - name: Sonar Scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./mvnw -B clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar

      - name: Check Sonar Status
        run: |
          status=$(curl https://sonarcloud.io/api/qualitygates/project_status?projectKey=java-repeat_java-repeat)
          echo $status | jq '.'
          status=$(echo $status | jq '.projectStatus.status')
          test '"OK"' = $status

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/maven@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          JAVA_HOME: /usr/java/openjdk-16

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1

      - name: Relase to Maven Central
        run: |
          git config --global user.email "java-repeat@github.com"
          git config --global user.name "java-repeat"
          ./mvnw --batch-mode clean release:prepare release:perform

        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}